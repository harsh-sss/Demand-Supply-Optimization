# -*- coding: utf-8 -*-
"""Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CUuT8oXFe6L6ZYXjdxg7GPSldbXaPCr-
"""

!pip install faker
import pandas as pd
import numpy as np
from faker import Faker
import random
from datetime import timedelta, datetime

# Initialize Faker for generating random names, etc.
fake = Faker()

# Define the date range
start_date = datetime(2023, 1, 1)
end_date = datetime(2024, 12, 31)
date_range = pd.date_range(start=start_date, end=end_date, freq='D')

# Define realistic product names similar to Amazon India categories
product_names = [
    "Smartphone", "Laptop", "Headphones", "Bluetooth Speaker", "Tablet",
    "Smartwatch", "DSLR Camera", "Fitness Tracker", "Power Bank",
    "Electric Kettle", "Microwave Oven", "Refrigerator", "Washing Machine",
    "Air Conditioner", "Television", "Water Purifier", "Vacuum Cleaner",
    "Induction Cooktop", "Mixer Grinder", "Iron", "Ceiling Fan", "Air Purifier",
    "Router", "WiFi Extender", "Printer", "Projector", "Gaming Console", "Hair Dryer"
]

# Initialize data list
data = []
product_ids = ['P001', 'P002', 'P003']  # Multiple products for variety

for product_id in product_ids:
    product_name = random.choice(product_names)  # Pick a random name from the list
    # Base sales quantity with randomness for each product
    base_sales = random.randint(80, 120)

    for date in date_range:
        sales_quantity = base_sales + np.random.normal(0, 10)  # Random daily fluctuation
        month = date.month
        day_of_week = date.weekday()

        # Monthly and weekly seasonality
        if month in [11, 12]:  # Holiday season boost
            sales_quantity *= 1.2
        elif month in [6, 7]:  # Summer sales boost
            sales_quantity *= 1.1
        if day_of_week in [5, 6]:  # Weekends
            sales_quantity *= 1.05

        # Promotion and holiday effect
        promotion = 1 if random.random() < 0.1 else 0
        if promotion:
            sales_quantity *= random.uniform(1.1, 1.5)
        holiday_effect = 1 if (date.month == 12 and date.day in [24, 25, 31]) else 0
        if holiday_effect:
            sales_quantity *= 1.3

        # Economic indicator
        economic_indicator = 0.7 + (0.001 * (date - start_date).days / 365) + np.random.normal(0, 0.02)

        # Stock and reorder data
        stock_level = random.randint(100, 500)
        reorder_point = random.randint(50, 150)
        lead_time = random.randint(5, 15)
        supplier_reliability = random.uniform(0.85, 1.0)

        # Append data
        data.append([
            product_id, product_name, date, max(0, round(sales_quantity)),
            round(sales_quantity * 20, 2), 20.0, stock_level, reorder_point, lead_time, 0,
            promotion, 1 if month in [11, 12, 6, 7] else 0, holiday_effect, fake.company_suffix(),
            supplier_reliability, random.choice(['Retail', 'Wholesale']),
            random.choice(['North', 'South', 'East', 'West']), economic_indicator
        ])

# Create DataFrame
columns = [
    'Product ID', 'Product Name', 'Date', 'Sales Quantity', 'Sales Revenue',
    'Price', 'Stock Level', 'Reorder Point', 'Lead Time', 'Forecasted Demand',
    'Promotion', 'Seasonality Factor', 'Holiday Effect', 'Supplier ID',
    'Supplier Reliability', 'Customer Segment', 'Region', 'Economic Indicator'
]
df = pd.DataFrame(data, columns=columns)

# Save to CSV in Colab
df.to_csv('/content/realistic_supply_demand_inventory.csv', index=False)
print("Synthetic data generated and saved as 'realistic_supply_demand_inventory.csv'.")

from google.colab import files
files.download('/content/realistic_supply_demand_inventory.csv')